var searchIndex = {};
searchIndex["serde_hjson"] = {"doc":"# What is Hjson?","items":[[0,"builder","serde_hjson","JSON Builders",null,null],[3,"ArrayBuilder","serde_hjson::builder","This structure provides a simple interface for constructing a JSON array.",null,null],[3,"ObjectBuilder","","This structure provides a simple interface for constructing a JSON object.",null,null],[11,"new","","Construct an `ObjectBuilder`.",0,{"inputs":[],"output":{"name":"arraybuilder"}}],[11,"unwrap","","Return the constructed `Value`.",0,null],[11,"push","","Insert a value into the array.",0,null],[11,"push_array","","Creates and passes an `ArrayBuilder` into a closure, then inserts the resulting array into\nthis array.",0,null],[11,"push_object","","Creates and passes an `ArrayBuilder` into a closure, then inserts the resulting object into\nthis array.",0,null],[11,"new","","Construct an `ObjectBuilder`.",1,{"inputs":[],"output":{"name":"objectbuilder"}}],[11,"unwrap","","Return the constructed `Value`.",1,null],[11,"insert","","Insert a key-value pair into the object.",1,null],[11,"insert_array","","Creates and passes an `ObjectBuilder` into a closure, then inserts the resulting array into\nthis object.",1,null],[11,"insert_object","","Creates and passes an `ObjectBuilder` into a closure, then inserts the resulting object into\nthis object.",1,null],[0,"de","serde_hjson","Hjson Deserialization",null,null],[3,"Deserializer","serde_hjson::de","A structure that deserializes Hjson into Rust values.",null,null],[3,"StreamDeserializer","","Iterator that deserializes a stream into multiple Hjson values.",null,null],[5,"from_iter","","Decodes a Hjson value from an iterator over an iterator\n`Iterator&lt;Item=u8&gt;`.",null,{"inputs":[{"name":"i"}],"output":{"name":"result"}}],[5,"from_reader","","Decodes a Hjson value from a `std::io::Read`.",null,{"inputs":[{"name":"r"}],"output":{"name":"result"}}],[5,"from_slice","","Decodes a Hjson value from a byte slice `&amp;[u8]`.",null,null],[5,"from_str","","Decodes a Hjson value from a `&amp;str`.",null,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"new","","Creates the Hjson parser from an `std::iter::Iterator`.",2,{"inputs":[{"name":"iter"}],"output":{"name":"deserializer"}}],[11,"new_for_root","","Creates the Hjson parser from an `std::iter::Iterator`.",2,{"inputs":[{"name":"iter"}],"output":{"name":"deserializer"}}],[11,"end","","The `Deserializer::end` method should be called after a value has been fully deserialized.\nThis allows the `Deserializer` to validate that the input stream is at the end or that it\nonly has trailing whitespace.",2,null],[11,"deserialize","","",2,null],[11,"deserialize_option","","Parses a `null` as a None, and any other values as a `Some(...)`.",2,null],[11,"deserialize_newtype_struct","","Parses a newtype struct as the underlying value.",2,null],[11,"deserialize_enum","","Parses an enum as an object like `{&quot;$KEY&quot;:$VALUE}`, where $VALUE is either a straight\nvalue, a `[..]`, or a `{..}`.",2,null],[11,"deserialize_bool","","",2,null],[11,"deserialize_usize","","",2,null],[11,"deserialize_u8","","",2,null],[11,"deserialize_u16","","",2,null],[11,"deserialize_u32","","",2,null],[11,"deserialize_u64","","",2,null],[11,"deserialize_isize","","",2,null],[11,"deserialize_i8","","",2,null],[11,"deserialize_i16","","",2,null],[11,"deserialize_i32","","",2,null],[11,"deserialize_i64","","",2,null],[11,"deserialize_f32","","",2,null],[11,"deserialize_f64","","",2,null],[11,"deserialize_char","","",2,null],[11,"deserialize_str","","",2,null],[11,"deserialize_string","","",2,null],[11,"deserialize_unit","","",2,null],[11,"deserialize_seq","","",2,null],[11,"deserialize_seq_fixed_size","","",2,null],[11,"deserialize_bytes","","",2,null],[11,"deserialize_map","","",2,null],[11,"deserialize_unit_struct","","",2,null],[11,"deserialize_tuple_struct","","",2,null],[11,"deserialize_struct","","",2,null],[11,"deserialize_struct_field","","",2,null],[11,"deserialize_tuple","","",2,null],[11,"deserialize_ignored_any","","",2,null],[11,"visit_variant","","",2,null],[11,"visit_unit","","",2,null],[11,"visit_newtype","","",2,null],[11,"visit_tuple","","",2,null],[11,"visit_struct","","",2,null],[11,"new","","Returns an `Iterator` of decoded Hjson values from an iterator over\n`Iterator&lt;Item=u8&gt;`.",3,{"inputs":[{"name":"iter"}],"output":{"name":"streamdeserializer"}}],[11,"next","","",3,null],[0,"error","serde_hjson","JSON Errors",null,null],[4,"ErrorCode","serde_hjson::error","The errors that can arise while parsing a JSON stream.",null,null],[13,"Custom","","Catchall for syntax error messages",4,null],[13,"InvalidType","","Incorrect type from value",4,null],[13,"InvalidValue","","Incorrect value",4,null],[13,"InvalidLength","","Invalid length",4,null],[13,"UnknownVariant","","Unknown variant in an enum.",4,null],[13,"UnknownField","","Unknown field in struct.",4,null],[13,"MissingField","","Struct is missing a field.",4,null],[13,"EOFWhileParsingList","","EOF while parsing a list.",4,null],[13,"EOFWhileParsingObject","","EOF while parsing an object.",4,null],[13,"EOFWhileParsingString","","EOF while parsing a string.",4,null],[13,"EOFWhileParsingValue","","EOF while parsing a JSON value.",4,null],[13,"ExpectedColon","","Expected this character to be a `&#39;:&#39;`.",4,null],[13,"ExpectedListCommaOrEnd","","Expected this character to be either a `&#39;,&#39;` or a `]`.",4,null],[13,"ExpectedObjectCommaOrEnd","","Expected this character to be either a `&#39;,&#39;` or a `}`.",4,null],[13,"ExpectedSomeIdent","","Expected to parse either a `true`, `false`, or a `null`.",4,null],[13,"ExpectedSomeValue","","Expected this character to start a JSON value.",4,null],[13,"InvalidEscape","","Invalid hex escape code.",4,null],[13,"InvalidNumber","","Invalid number.",4,null],[13,"InvalidUnicodeCodePoint","","Invalid unicode code point.",4,null],[13,"KeyMustBeAString","","Object key is not a string.",4,null],[13,"LoneLeadingSurrogateInHexEscape","","Lone leading surrogate in hex escape.",4,null],[13,"TrailingCharacters","","JSON has non-whitespace trailing characters after the value.",4,null],[13,"UnexpectedEndOfHexEscape","","Unexpected end of hex excape.",4,null],[13,"PunctuatorInQlString","","Found a punctuator character when excpecting a quoteless string.",4,null],[4,"Error","","This type represents all possible errors that can occur when serializing or deserializing a\nvalue into JSON.",null,null],[13,"Syntax","","The JSON value had some syntatic error.",5,null],[13,"Io","","Some IO error occurred when serializing or deserializing a value.",5,null],[13,"FromUtf8","","Some UTF8 error occurred while serializing or deserializing a value.",5,null],[6,"Result","","Helper alias for `Result` objects that return a JSON `Error`.",null,null],[11,"eq","","",4,null],[11,"ne","","",4,null],[11,"clone","","",4,null],[11,"fmt","","",4,null],[11,"fmt","","",5,null],[11,"description","","",5,null],[11,"cause","","",5,null],[11,"fmt","","",5,null],[11,"from","","",5,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"from","","",5,{"inputs":[{"name":"fromutf8error"}],"output":{"name":"error"}}],[11,"from","","",5,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"custom","","",5,{"inputs":[{"name":"t"}],"output":{"name":"error"}}],[11,"end_of_stream","","",5,{"inputs":[],"output":{"name":"error"}}],[11,"invalid_type","","",5,{"inputs":[{"name":"type"}],"output":{"name":"error"}}],[11,"invalid_value","","",5,{"inputs":[{"name":"str"}],"output":{"name":"error"}}],[11,"invalid_length","","",5,{"inputs":[{"name":"usize"}],"output":{"name":"error"}}],[11,"unknown_variant","","",5,{"inputs":[{"name":"str"}],"output":{"name":"error"}}],[11,"unknown_field","","",5,{"inputs":[{"name":"str"}],"output":{"name":"error"}}],[11,"missing_field","","",5,{"inputs":[{"name":"str"}],"output":{"name":"error"}}],[11,"custom","","Raised when there is general error when deserializing a type.",5,{"inputs":[{"name":"t"}],"output":{"name":"error"}}],[0,"ser","serde_hjson","Hjson Serialization",null,null],[3,"Serializer","serde_hjson::ser","A structure for serializing Rust values into Hjson.",null,null],[5,"escape_bytes","","Serializes and escapes a `&amp;[u8]` into a Hjson string.",null,null],[5,"quote_str","","Serializes and escapes a `&amp;str` into a Hjson string.",null,{"inputs":[{"name":"w"},{"name":"f"},{"name":"str"}],"output":{"name":"result"}}],[5,"ml_str","","Serializes and escapes a `&amp;str` into a multiline Hjson string.",null,{"inputs":[{"name":"w"},{"name":"f"},{"name":"str"}],"output":{"name":"result"}}],[5,"escape_key","","Serializes and escapes a `&amp;str` into a Hjson key.",null,{"inputs":[{"name":"w"},{"name":"str"}],"output":{"name":"result"}}],[5,"to_writer","","Encode the specified struct into a Hjson `[u8]` writer.",null,{"inputs":[{"name":"w"},{"name":"t"}],"output":{"name":"result"}}],[5,"to_vec","","Encode the specified struct into a Hjson `[u8]` buffer.",null,{"inputs":[{"name":"t"}],"output":{"name":"result"}}],[5,"to_string","","Encode the specified struct into a Hjson `String` buffer.",null,{"inputs":[{"name":"t"}],"output":{"name":"result"}}],[8,"Formatter","","This trait abstracts away serializing the JSON control characters",null,null],[10,"open","","Called when serializing a &#39;{&#39; or &#39;[&#39;.",6,null],[10,"comma","","Called when serializing a &#39;,&#39;.",6,null],[10,"colon","","Called when serializing a &#39;:&#39;.",6,null],[10,"close","","Called when serializing a &#39;}&#39; or &#39;]&#39;.",6,null],[10,"newline","","Newline with indent.",6,null],[10,"start_value","","Start a value.",6,null],[11,"new","","Creates a new Hjson serializer.",7,{"inputs":[{"name":"w"}],"output":{"name":"self"}}],[11,"with_formatter","","Creates a new Hjson visitor whose output will be written to the writer\nspecified.",7,{"inputs":[{"name":"w"},{"name":"f"}],"output":{"name":"self"}}],[11,"into_inner","","Unwrap the `Writer` from the `Serializer`.",7,null],[11,"serialize_bool","","",7,null],[11,"serialize_isize","","",7,null],[11,"serialize_i8","","",7,null],[11,"serialize_i16","","",7,null],[11,"serialize_i32","","",7,null],[11,"serialize_i64","","",7,null],[11,"serialize_usize","","",7,null],[11,"serialize_u8","","",7,null],[11,"serialize_u16","","",7,null],[11,"serialize_u32","","",7,null],[11,"serialize_u64","","",7,null],[11,"serialize_f32","","",7,null],[11,"serialize_f64","","",7,null],[11,"serialize_char","","",7,null],[11,"serialize_str","","",7,null],[11,"serialize_bytes","","",7,null],[11,"serialize_unit","","",7,null],[11,"serialize_unit_struct","","",7,null],[11,"serialize_unit_variant","","",7,null],[11,"serialize_newtype_struct","","Serialize newtypes without an object wrapper.",7,null],[11,"serialize_newtype_variant","","",7,null],[11,"serialize_none","","",7,null],[11,"serialize_some","","",7,null],[11,"serialize_seq","","",7,null],[11,"serialize_seq_elt","","",7,null],[11,"serialize_seq_end","","",7,null],[11,"serialize_seq_fixed_size","","",7,null],[11,"serialize_tuple","","",7,null],[11,"serialize_tuple_elt","","",7,null],[11,"serialize_tuple_end","","",7,null],[11,"serialize_tuple_struct","","",7,null],[11,"serialize_tuple_struct_elt","","",7,null],[11,"serialize_tuple_struct_end","","",7,null],[11,"serialize_tuple_variant","","",7,null],[11,"serialize_tuple_variant_elt","","",7,null],[11,"serialize_tuple_variant_end","","",7,null],[11,"serialize_map","","",7,null],[11,"serialize_map_key","","",7,null],[11,"serialize_map_value","","",7,null],[11,"serialize_map_end","","",7,null],[11,"serialize_struct","","",7,null],[11,"serialize_struct_elt","","",7,null],[11,"serialize_struct_end","","",7,null],[11,"serialize_struct_variant","","",7,null],[11,"serialize_struct_variant_elt","","",7,null],[11,"serialize_struct_variant_end","","",7,null],[0,"value","serde_hjson","Hjson Value",null,null],[3,"Serializer","serde_hjson::value","Create a `serde::Serializer` that serializes a `Serialize`e into a `Value`.",null,null],[3,"Deserializer","","Creates a `serde::Deserializer` from a `Value` object.",null,null],[4,"Value","","Represents a Hjson/JSON value",null,null],[13,"Null","","Represents a JSON null value",8,null],[13,"Bool","","Represents a JSON Boolean",8,null],[13,"I64","","Represents a JSON signed integer",8,null],[13,"U64","","Represents a JSON unsigned integer",8,null],[13,"F64","","Represents a JSON floating point number",8,null],[13,"String","","Represents a JSON string",8,null],[13,"Array","","Represents a JSON array",8,null],[13,"Object","","Represents a JSON object",8,null],[5,"to_value","","Shortcut function to encode a `T` into a Hjson `Value`",null,{"inputs":[{"name":"t"}],"output":{"name":"value"}}],[5,"from_value","","Shortcut function to decode a Hjson `Value` into a `T`",null,{"inputs":[{"name":"value"}],"output":{"name":"result"}}],[6,"Map","","Represents a key/value type.",null,null],[6,"MapIntoIter","","Represents the IntoIter type.",null,null],[8,"ToJson","","A trait for converting values to Hjson",null,null],[10,"to_json","","Converts the value of `self` to an instance of Hjson",9,null],[11,"eq","","",8,null],[11,"ne","","",8,null],[11,"clone","","",8,null],[11,"find","","If the `Value` is an Object, returns the value associated with the provided key.\nOtherwise, returns None.",8,null],[11,"find_path","","Attempts to get a nested Value Object for each key in `keys`.\nIf any key is found not to exist, find_path will return None.\nOtherwise, it will return the `Value` associated with the final key.",8,null],[11,"pointer","","Looks up a value by a JSON Pointer.",8,null],[11,"search","","If the `Value` is an Object, performs a depth-first search until\na value associated with the provided key is found. If no value is found\nor the `Value` is not an Object, returns None.",8,null],[11,"is_object","","Returns true if the `Value` is an Object. Returns false otherwise.",8,null],[11,"as_object","","If the `Value` is an Object, returns the associated Map.\nReturns None otherwise.",8,null],[11,"as_object_mut","","If the `Value` is an Object, returns the associated mutable Map.\nReturns None otherwise.",8,null],[11,"is_array","","Returns true if the `Value` is an Array. Returns false otherwise.",8,null],[11,"as_array","","If the `Value` is an Array, returns the associated vector.\nReturns None otherwise.",8,null],[11,"as_array_mut","","If the `Value` is an Array, returns the associated mutable vector.\nReturns None otherwise.",8,null],[11,"is_string","","Returns true if the `Value` is a String. Returns false otherwise.",8,null],[11,"as_str","","If the `Value` is a String, returns the associated str.\nReturns None otherwise.",8,null],[11,"is_number","","Returns true if the `Value` is a Number. Returns false otherwise.",8,null],[11,"is_i64","","Returns true if the `Value` is a i64. Returns false otherwise.",8,null],[11,"is_u64","","Returns true if the `Value` is a u64. Returns false otherwise.",8,null],[11,"is_f64","","Returns true if the `Value` is a f64. Returns false otherwise.",8,null],[11,"as_i64","","If the `Value` is a number, return or cast it to a i64.\nReturns None otherwise.",8,null],[11,"as_u64","","If the `Value` is a number, return or cast it to a u64.\nReturns None otherwise.",8,null],[11,"as_f64","","If the `Value` is a number, return or cast it to a f64.\nReturns None otherwise.",8,null],[11,"is_boolean","","Returns true if the `Value` is a Boolean. Returns false otherwise.",8,null],[11,"as_bool","","If the `Value` is a Boolean, returns the associated bool.\nReturns None otherwise.",8,null],[11,"is_null","","Returns true if the `Value` is a Null. Returns false otherwise.",8,null],[11,"as_null","","If the `Value` is a Null, returns ().\nReturns None otherwise.",8,null],[11,"serialize","","",8,null],[11,"deserialize","","",8,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"fmt","","Serializes a Hjson value into a string",8,null],[11,"fmt","","Serializes a Hjson value into a string",8,null],[11,"from_str","","",8,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"new","","Construct a new `Serializer`.",10,{"inputs":[],"output":{"name":"serializer"}}],[11,"unwrap","","Unwrap the `Serializer` and return the `Value`.",10,null],[11,"default","","",10,{"inputs":[],"output":{"name":"self"}}],[11,"serialize_bool","","",10,null],[11,"serialize_isize","","",10,null],[11,"serialize_i8","","",10,null],[11,"serialize_i16","","",10,null],[11,"serialize_i32","","",10,null],[11,"serialize_i64","","",10,null],[11,"serialize_usize","","",10,null],[11,"serialize_u8","","",10,null],[11,"serialize_u16","","",10,null],[11,"serialize_u32","","",10,null],[11,"serialize_u64","","",10,null],[11,"serialize_f32","","",10,null],[11,"serialize_f64","","",10,null],[11,"serialize_char","","",10,null],[11,"serialize_str","","",10,null],[11,"serialize_bytes","","",10,null],[11,"serialize_unit","","",10,null],[11,"serialize_unit_struct","","",10,null],[11,"serialize_unit_variant","","",10,null],[11,"serialize_newtype_struct","","",10,null],[11,"serialize_newtype_variant","","",10,null],[11,"serialize_none","","",10,null],[11,"serialize_some","","",10,null],[11,"serialize_seq","","",10,null],[11,"serialize_seq_elt","","",10,null],[11,"serialize_seq_end","","",10,null],[11,"serialize_seq_fixed_size","","",10,null],[11,"serialize_tuple","","",10,null],[11,"serialize_tuple_elt","","",10,null],[11,"serialize_tuple_end","","",10,null],[11,"serialize_tuple_struct","","",10,null],[11,"serialize_tuple_struct_elt","","",10,null],[11,"serialize_tuple_struct_end","","",10,null],[11,"serialize_tuple_variant","","",10,null],[11,"serialize_tuple_variant_elt","","",10,null],[11,"serialize_tuple_variant_end","","",10,null],[11,"serialize_map","","",10,null],[11,"serialize_map_key","","",10,null],[11,"serialize_map_value","","",10,null],[11,"serialize_map_end","","",10,null],[11,"serialize_struct","","",10,null],[11,"serialize_struct_elt","","",10,null],[11,"serialize_struct_end","","",10,null],[11,"serialize_struct_variant","","",10,null],[11,"serialize_struct_variant_elt","","",10,null],[11,"serialize_struct_variant_end","","",10,null],[11,"new","","Creates a new deserializer instance for deserializing the specified Hjson value.",11,{"inputs":[{"name":"value"}],"output":{"name":"deserializer"}}],[11,"deserialize","","",11,null],[11,"deserialize_option","","",11,null],[11,"deserialize_enum","","",11,null],[11,"deserialize_newtype_struct","","",11,null],[11,"deserialize_bool","","",11,null],[11,"deserialize_usize","","",11,null],[11,"deserialize_u8","","",11,null],[11,"deserialize_u16","","",11,null],[11,"deserialize_u32","","",11,null],[11,"deserialize_u64","","",11,null],[11,"deserialize_isize","","",11,null],[11,"deserialize_i8","","",11,null],[11,"deserialize_i16","","",11,null],[11,"deserialize_i32","","",11,null],[11,"deserialize_i64","","",11,null],[11,"deserialize_f32","","",11,null],[11,"deserialize_f64","","",11,null],[11,"deserialize_char","","",11,null],[11,"deserialize_str","","",11,null],[11,"deserialize_string","","",11,null],[11,"deserialize_unit","","",11,null],[11,"deserialize_seq","","",11,null],[11,"deserialize_seq_fixed_size","","",11,null],[11,"deserialize_bytes","","",11,null],[11,"deserialize_map","","",11,null],[11,"deserialize_unit_struct","","",11,null],[11,"deserialize_tuple_struct","","",11,null],[11,"deserialize_struct","","",11,null],[11,"deserialize_struct_field","","",11,null],[11,"deserialize_tuple","","",11,null],[11,"deserialize_ignored_any","","",11,null],[14,"forward_to_deserialize!","serde_hjson","",null,null]],"paths":[[3,"ArrayBuilder"],[3,"ObjectBuilder"],[3,"Deserializer"],[3,"StreamDeserializer"],[4,"ErrorCode"],[4,"Error"],[8,"Formatter"],[3,"Serializer"],[4,"Value"],[8,"ToJson"],[3,"Serializer"],[3,"Deserializer"]]};
initSearch(searchIndex);
